<h3>Formulaire d'annonce</h3>
<div class="well">
    {# Ouverture de la balise <form> #}
    {{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}
    {# Erreurs générales du formulaire #}
    {{  form_errors(form) }}

    <div class="form-group">
        {# Génération du label #}
        {{ form_label(form.title, 'Titre de l\'annonce', {'label_attr': {'class': 'col-sm-3 control-label'}}) }}
        {# Affichage des erreurs de ce champ précis #}
        {{ form_errors(form.title) }}
        <div class="col-sm-4">
            {# Génération de l'input #}
            {{ form_widget(form.title, {'attr': {'class': 'form-control'}}) }}
        </div>
    </div>
    <div class="form-group">
        {{ form_label(form.content, 'Contenu de l\'annonce', {'label_attr': {'class': 'col-sm-3 control-label'}}) }}
        {{ form_errors(form.title) }}
        <div class="col-sm-4">
            {{ form_widget(form.content, {'attr': {'class': 'form-control'}}) }}
        </div>
    </div>

    {# Génération du label + error + widget pour un champ #}
    {# {{ form_row(form.date) }} #}
    {{ form_row(form.author) }}
    {# {{ form_row(form.published) }} #}

    {# Pour le bouton, pas de label ni d'erreur, on affiche juste le widget #}
    {# {{ form_widget(form.save, {'attr': {'class': 'btn btn-primary'}}) }} #}

    {# Génération automatique des champs pas encore écrits
    Ici, le champ CSRF (géré automatiquement par Symfony) et tous les champs cachés (type "hidden") #}
    {{ form_rest(form) }}

    {# Fermeture de la balise <form> #}
    {{ form_end(form) }}
</div>

{# On charge Jquery #}
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<script type="text/javascript">
    $(document).ready(function() {
       // On récupère la balise <div> en question qui contient l'attribut "data-prototype"
        var $container = $('div#av_platformbundle_advert_categories');
        // On ajoute un lien pour ajouter une nouvelle catégoire
        var $addLink = $('<a href="#" id="add_category" class="btn btn-default">Ajouter une catégorie</a>');
        $container.append($addLink);
        // On ajoute un nouveau champ à chaque clic sur le lien d'ajout
        $addLink.click(function(e) {
           addCategory($container);
            e.preventDefault(); // évite qu'un # apparaisse dans l'URL
            return false;
        });

        // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
        var index = $container.find(':input').length;
        // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (nouvelle annonce par exemple)
        if(index == 0) {
            addCategory($container);
        } else {
            // Pour chaque catégorie déjà existante, on ajotue un lien de suppression
            $container.children('div').each(function() {
                addDeleteLink($(this));
            });
        }

        // La fonction qui ajoute un formulaire Categorie
        function addCategory($container) {
            // Dans le contexte de l'attribut "data-prototype" on remplace :
            // - le texte "__name__label__" par le label du champ
            // - le texte "__name__" par le numéro du champ
            var $prototype = $($container.attr('data-prototype').replace(/__name__label__/g, 'Catégorie n°' + (index+1)).replace(/__name__/g, index));
            // On ajoute au prototype un lien pour pouvoir supprimer la catégorie
            addDeleteLink($prototype);
            // On ajoute le prototype modifié à la fin de la balise <div>
            $container.append($prototype);
            // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
            index++;
        }

        // La fonction qui ajoute un lien de suprression d'une catégorie
        function addDeleteLink($prototype) {
            // Création du lien
            $deleteLink = $('<a href="#" class="btn btn-danger">Supprimer</a>');
            // Ajout du lien
            $prototype.append($deleteLink);
            // Ajout du listener sur le clic du lien
            $deleteLink.click(function(e) {
                $prototype.remove();
                e.preventeDefault(); // évite qu'un # apparaisse dans l'URL
                return false;
            })
        }
    });
</script>